# Generated by cucumber-sinatra. (Thu Jul 15 12:27:57 -0400 2010)

require 'capybara'
require 'capybara/cucumber'
require 'capybara/envjs'
require 'spec'

require 'json'
require 'friendly'

# Helper method for running shell commands
def run(command, verbose = false, message = nil)
  if verbose then
    puts "#{message}"
    puts command
    result = `#{command}`
    puts result
    return result
  else
    `#{command}`
  end
end

#Friendly.configure(YAML::load_file("config/database.yml")["test"])

Friendly.configure(YAML::load_file(File.join(File.dirname(__FILE__), '..', '..', 'config','database.yml'))["test"])

require File.join(File.dirname(__FILE__), '..', '..', 'application.rb')
require File.join(File.dirname(__FILE__), '..', '..', 'models/project.rb')

World do
  Capybara.app = Sinatra::Application
  Capybara.default_driver = :envjs
  Capybara.default_selector = :css
#  Capybara.javascript_driver = :envjs
  include Capybara
  include Spec::Expectations
  include Spec::Matchers
end

# This can be called within features using @reset_test_data
def reset_test_data
  # Copy a fresh set of test data from the fixture
  run "rm -rf #{APPLICATION_ROOT}/test_data/*"
  run "cp -a #{APPLICATION_ROOT}/test_data_fixtures/* #{APPLICATION_ROOT}test_data", true, "Resetting test database"
end

reset_test_data

at_exit do
end
